#!/usr/bin/python3
"""General Model module"""
import uuid
from datetime import datetime

class BaseModel:
    """Class BaseModel"""
    def __init__(self, created_at=datetime.now().isoformat(), updated_at=datetime.now().isoformat(), __dict__={}, id=None):
        """
        init methods that initializes the class
        Attribute:
        __dic__ -a dictionary that returns a list of the attributes
        id -an autogenerated string value for universal unique id
        """
        self.__dict__ = __dict__
        self.id = str(uuid.uuid4())
        self.created_at = datetime.strptime(created_at, "%Y-%m-%dT%H:%M:%S.%f")
        self.updated_at = datetime.strptime(created_at, "%Y-%m-%dT%H:%M:%S.%f")

    def __str__(self):
        return "[{}] ({}) {}".format(self.__class__.__name__, self.id, self.__dict__)

    def save(self):
        """updates updated_at"""
        self.updated_at = datetime.now().isoformat()

    def to_dict(self):
        """creates a dictionary for the attributes"""
        my_dic = self.__dict__
        my_dic["__class__"] = self.__class__.__name__
        my_dic["created_at"] = datetime.now().isoformat()
        my_dic["updated_at"] = datetime.now().isoformat()
        return my_dic
